#!/usr/bin/perl

use Mojo::Base -strict;

###############################################################################
## 1 ##########################################################################
{
    my @list = (1, 2, 5, 7, 2, 5, 6, 8, 2);

    my %hash = map { $_ => 1 } @list;

    open my $fh, '>', '/tmp/numbers.txt';
    print $fh join q{, }, keys %hash;
    close $fh;
}

###############################################################################
## 2 ##########################################################################
{
    my $string = "Win 10 is better than windows 8";
    $string =~ s{(?i:win|windows)\s\d+}{Linux}gx;
}

###############################################################################
## 3 ##########################################################################
=pod
select
    o.order_id
from
    users as u join orders as o on u.id = o.user_id
where
    o.total_price > 1000
=cut

###############################################################################
## 4 ##########################################################################
=pod
select
    u.user_name
from
    users as u join orders as o on u.id = o.user_id
group by
    o.user_id
having
    count(o.user_id) > 1
=cut

###############################################################################
## 5 ##########################################################################
package Car;

sub new {
    my ($class, $engine) = @_;

    bless {engine => $engine}, $class;
}

sub info {
    shift->{'engine'};
}

package main;

Car->new(1.8)->info;

###############################################################################
## 6 ##########################################################################
package Mercedes;

use base 'Car';

package main;

Mercedes->new(5.2)->info;

